from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from data.config import ADMIN_LINK, ADMINS, HELP_URL

from utils.db.db_context import DbContext


async def get_inline_keyboard(buttons_data):
    buttons = []

    for button_info in buttons_data["buttons_info"]:
        text_key = button_info.get("text_key")
        callback_data = button_info.get("callback_data")
        url = button_info.get("url")

        if not text_key:
            raise ValueError("Missing 'text_key' in button_info")
        if url or callback_data:
            button_row = []
            if url:
                button_row.append(InlineKeyboardButton(text=f"üåê {text_key}", url=url))
            if callback_data:
                button_row.append(
                    InlineKeyboardButton(text=f"{text_key}", callback_data=callback_data))
            buttons.append(button_row)

    if not buttons:
        raise ValueError("No valid buttons provided")

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


async def get_admin(telegram_id):
    buttons_data = {
        "telegram_id": telegram_id,
        "buttons_info": [
            {"text_key": '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º', "callback_data": "adm_gen"},
            {"text_key": '–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º', "callback_data": "adm_newsletter"},
            {"text_key": '–ù–∞–∑–∞–¥', "callback_data": "menu_start"},
        ]
    }
    return await get_inline_keyboard(buttons_data)


async def get_gen(telegram_id):
    buttons_data = {
        "telegram_id": telegram_id,
        "buttons_info": [
            {"text_key": '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞', "callback_data": "gen_new"},
            {"text_key": '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª—é—á–µ–π', "callback_data": "gen_list"},
            {"text_key": '–ù–∞–∑–∞–¥', "callback_data": "menu_admin"},
        ]
    }
    return await get_inline_keyboard(buttons_data)


async def get_main(telegram_id):
    buttons_info = [
        {"text_key": '–ú–µ–Ω—é', "callback_data": "menu_main"},
        {"text_key": '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', "callback_data": "menu_admin", "condition": str(telegram_id) in ADMINS},
        {"text_key": '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', "callback_data": "menu_profile"},
    ]

    buttons_info = [info for info in buttons_info if "condition" not in info or info["condition"]]

    buttons_data = {
        "telegram_id": telegram_id,
        "buttons_info": buttons_info
    }

    return await get_inline_keyboard(buttons_data)


async def get_help(telegram_id):
    buttons_data = {
        "telegram_id": telegram_id,
        "buttons_info": [
            {"text_key": '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', "url": HELP_URL},
            {"text_key": '–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É', "url": ADMIN_LINK},
            {"text_key": '–ù–∞–∑–∞–¥', "callback_data": 'menu_main'},
        ]
    }
    return await get_inline_keyboard(buttons_data)


async def get_profile(telegram_id):
    buttons_data = {
        "telegram_id": telegram_id,
        "buttons_info": [
            {"text_key": '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏', "callback_data": "menu_accs"},
            {"text_key": '–î—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', "callback_data": "menu_settings"},
            {"text_key": '–ù–∞–∑–∞–¥', "callback_data": "menu_start"},
        ]
    }
    return await get_inline_keyboard(buttons_data)


async def get_settings(telegram_id):
    buttons_data = {
        "telegram_id": telegram_id,
        "buttons_info": [
            {"text_key": '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏', "callback_data": "menu_proxy"},
            {"text_key": '–£–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞', "callback_data": "proxy_device"},
            {"text_key": '–ù–∞–∑–∞–¥', "callback_data": "menu_profile"},
        ]
    }
    return await get_inline_keyboard(buttons_data)


async def get_menu(context: DbContext, telegram_id):
    task_status = await context.get_task_status(telegram_id)
    buttons_data = {
        "telegram_id": telegram_id,
        "buttons_info": [
            {"text_key": '–ó–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–¥–∞—á—É', "callback_data": "task_start"} if not task_status else
            {"text_key": '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–¥–∞—á—É', "callback_data": "menu_switch"},
            {"text_key": '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', "callback_data": "menu_help"},
            {"text_key": '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', "callback_data": "menu_start"},
        ]
    }
    return await get_inline_keyboard(buttons_data)


async def accs_settings(telegram_id):
    buttons_data = {
        "telegram_id": telegram_id,
        "buttons_info": [
            {"text_key": '–î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç', "callback_data": "menu_addacc"},
            {"text_key": '–°–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤', "callback_data": "menu_acclist"},
            {"text_key": '–ù–∞–∑–∞–¥', "callback_data": "menu_profile"},
        ]
    }
    return await get_inline_keyboard(buttons_data)


async def get_proxy_settings(context: DbContext, telegram_id):
    server, port, ptype, login, pwd, ipv6 = await context.get_user_proxy_credentials(telegram_id)

    buttons_data = {
        "telegram_id": telegram_id,
        "buttons_info": [
            {"text_key": '–ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å –ø—Ä–æ–∫—Å–∏' if server else '–£–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å –ø—Ä–æ–∫—Å–∏',
             "callback_data": 'proxy_server'},
            {"text_key": '–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—Ç –ø—Ä–æ–∫—Å–∏' if port else '–£–∫–∞–∑–∞—Ç—å –ø–æ—Ä—Ç –ø—Ä–æ–∫—Å–∏',
             "callback_data": 'proxy_port'},
            {"text_key": '–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø –ø—Ä–æ–∫—Å–∏' if ptype else '–£–∫–∞–∑–∞—Ç—å —Ç–∏–ø –ø—Ä–æ–∫—Å–∏', "callback_data": 'proxy_type'},
            {"text_key": '–ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω –ø—Ä–æ–∫—Å–∏' if login else '–£–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏–Ω –ø—Ä–æ–∫—Å–∏',
             "callback_data": 'proxy_login'},
            {"text_key": '–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø—Ä–æ–∫—Å–∏' if pwd else '–£–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å –ø—Ä–æ–∫—Å–∏',
             "callback_data": 'proxy_password'},
            {"text_key": '–í—ã–∫–ª—é—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É IPv6' if ipv6 else '–í–∫–ª—é—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É IPv6', "callback_data": 'proxy_ipv6'},
            {"text_key": '–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–∫—Å–∏', "callback_data": 'proxy_clear'},
            {"text_key": '–ù–∞–∑–∞–¥', "callback_data": 'menu_settings'},
        ]
    }
    return await get_inline_keyboard(buttons_data)
